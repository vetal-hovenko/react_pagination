{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","newList","pages","currentPage","setCurrentPage","setInfo","items","indexOfFirst","indexOf","indexOfLast","length","useEffect","isFirstPage","isLastPage","className","href","onClick","map","page","item","from","to","numbers","n","push","getNumbers","App","useState","amountOfItems","setAmountOfItems","info","startItem","slice","i","Math","ceil","value","id","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"4KAWaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,QACAC,EACI,EADJA,MAEMC,EAAeD,EAAME,QAAQP,EAAQ,IAAM,EAC3CQ,EAAcH,EAAME,QAAQP,EAAQA,EAAQS,OAAS,IAAM,EAEjEC,qBAAU,WACRN,EAAQ,QAAD,OACGF,EAAc,EADjB,mBAC6BI,EAD7B,cAEHE,EAFG,eAGEH,EAAMI,OAHR,QAKN,CAACP,EAAaI,EAAcN,EAAQS,OAAQJ,EAAMI,OAAQL,IAE7D,IAAMO,EAA8B,IAAhBT,EACdU,EAAaV,IAAgBD,EAAMQ,OAAS,EAclD,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAeF,EAAc,WAAa,IAAvD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QArBW,WACdJ,GACHR,EAAeD,EAAc,IAczB,oBAWDD,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAeJ,UAAS,mBAAcX,IAAgBD,EAAMM,QAAQU,GAAQ,UAAY,IAAxF,SACE,mBACE,UAAQ,WACRH,KAAI,WAAMG,GACVF,QAAS,WACPZ,EAAeF,EAAMM,QAAQU,KAE/BJ,UAAU,YANZ,SAQGI,KATIA,MAcX,oBAAIJ,UAAS,oBAAeD,EAAa,WAAa,IAAtD,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAAeF,EACfG,QA1CW,WACdH,GACHT,EAAeD,EAAc,IAmCzB,uBAWJ,6BACGF,EAAQgB,KAAI,SAAAE,GAAI,OACf,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCpFnB,IAAMb,ECLC,SAAoBc,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFeG,CAAW,EAAG,IACnCR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAU3B,IATA,MAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoBC,EAApB,KACA,EAAwBuB,mBAAS,0BAAD,OAA2BrB,EAAMI,OAAjC,MAAhC,mBAAOoB,EAAP,KAAazB,EAAb,KAEM0B,EAAoB5B,EAAcyB,EAClC1B,EAAkB,GAElBD,EAAoBK,EAAM0B,MAAMD,EAAWA,EAAYH,GAEpDK,EAAI,EAAGA,GAAKC,KAAKC,KAAK7B,EAAMI,OAASkB,GAAgBK,GAAK,EACjE/B,EAAMsB,KAAKS,GAGb,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGgB,IAGH,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEsB,MAAOR,EACP,UAAQ,kBACRS,GAAG,kBACHvB,UAAU,eACVwB,SAAU,SAACC,GACTnC,EAAe,GACfyB,GAAkBU,EAAMC,OAAOJ,QAPnC,UAUE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,QAASA,EACTC,MAAOA,EACPC,YAAaA,EACbC,eAAgBA,EAChBC,QAASA,EACTC,MAAOA,QEzDfoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.951fbcdb.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\ninterface Props {\n  newList: string[];\n  pages: number[];\n  currentPage: number;\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n  setInfo: React.Dispatch<React.SetStateAction<string>>;\n  items: string[];\n}\n\nexport const Pagination: React.FC<Props> = ({\n  newList,\n  pages,\n  currentPage,\n  setCurrentPage,\n  setInfo,\n  items,\n}) => {\n  const indexOfFirst = items.indexOf(newList[0]) + 1;\n  const indexOfLast = items.indexOf(newList[newList.length - 1]) + 1;\n\n  useEffect(() => {\n    setInfo(\n      `Page ${currentPage + 1} (items ${indexOfFirst} - ${\n        indexOfLast\n      } of ${items.length})`,\n    );\n  }, [currentPage, indexOfFirst, newList.length, items.length, setInfo]);\n\n  const isFirstPage = currentPage === 0;\n  const isLastPage = currentPage === pages.length - 1;\n\n  const goToPrevPage = () => {\n    if (!isFirstPage) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (!isLastPage) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${isFirstPage ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={goToPrevPage}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li key={page} className={`page-item${currentPage === pages.indexOf(page) ? ' active' : ''}`}>\n            <a\n              data-cy=\"pageLink\"\n              href={`#${page}`}\n              onClick={() => {\n                setCurrentPage(pages.indexOf(page));\n              }}\n              className=\"page-link\"\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={`page-item ${isLastPage ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={goToNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {newList.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [amountOfItems, setAmountOfItems] = useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [info, setInfo] = useState(`Page 1 (items 1 - 5 of ${items.length})`);\n\n  const startItem: number = currentPage * amountOfItems;\n  const pages: number[] = [];\n\n  const newList: string[] = items.slice(startItem, startItem + amountOfItems);\n\n  for (let i = 1; i <= Math.ceil(items.length / amountOfItems); i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {info}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={amountOfItems}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setCurrentPage(0);\n              setAmountOfItems(+event.target.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        newList={newList}\n        pages={pages}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        setInfo={setInfo}\n        items={items}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}