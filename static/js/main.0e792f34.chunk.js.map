{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","newList","total","perPage","currentPage","setCurrentPage","setInfo","items","indexOfFirst","indexOf","indexOfLast","length","useEffect","totalPages","Math","ceil","isFirstPage","isLastPage","pages","Array","from","map","_","index","className","href","onClick","page","item","to","numbers","n","push","getNumbers","App","useState","amountOfItems","setAmountOfItems","info","startItem","slice","value","id","onChange","event","target","handleAmountSelection","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e792f34.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\ninterface Props {\n  newList: string[];\n  total: number;\n  perPage: number;\n  currentPage: number;\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n  setInfo: React.Dispatch<React.SetStateAction<string>>;\n  items: string[];\n}\n\nexport const Pagination: React.FC<Props> = ({\n  newList,\n  total,\n  perPage,\n  currentPage,\n  setCurrentPage,\n  setInfo,\n  items,\n}) => {\n  const indexOfFirst = items.indexOf(newList[0]) + 1;\n  const indexOfLast = items.indexOf(newList[newList.length - 1]) + 1;\n\n  useEffect(() => {\n    setInfo(`Page ${currentPage} (items ${indexOfFirst} - ${indexOfLast} of ${items.length})`);\n  }, [currentPage, indexOfFirst, indexOfLast, items.length, setInfo]);\n\n  const totalPages = Math.ceil(total / perPage);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const goToPrevPage = () => {\n    if (!isFirstPage) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (!isLastPage) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const pages = Array.from({ length: totalPages }).map((_, index) => index);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${isFirstPage ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={goToPrevPage}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map((page) => (\n          <li key={page} className={`page-item${currentPage === page + 1 ? ' active' : ''}`}>\n            <a\n              data-cy=\"pageLink\"\n              href={`#${page + 1}`}\n              onClick={() => {\n                setCurrentPage(page + 1);\n              }}\n              className=\"page-link\"\n            >\n              {page + 1}\n            </a>\n          </li>\n        ))}\n\n        <li className={`page-item ${isLastPage ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={goToNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {newList.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App = () => {\n  const [amountOfItems, setAmountOfItems] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [info, setInfo] = useState(`Page 1 (items 1 - 5 of ${items.length})`);\n\n  const startItem = currentPage !== 1 ? (currentPage - 1) * amountOfItems : 0;\n\n  const newList = items.slice(startItem, startItem + amountOfItems);\n\n  const total = items.length;\n\n  const handleAmountSelection = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setCurrentPage(1); // tests say that it should set 1st page on change of amount\n    setAmountOfItems(+event.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {info}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={amountOfItems}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => handleAmountSelection(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        newList={newList}\n        total={total}\n        perPage={amountOfItems}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        setInfo={setInfo}\n        items={items}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}